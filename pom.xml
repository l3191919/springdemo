<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!--<version>2.2.2.RELEASE</version>-->
		<version>2.6.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.lyz</groupId>
	<artifactId>PaymentApplication</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>PaymentApplication</name>
	<description>PaymentApplication project for Spring Boot</description>
	<properties>
		<java.version>8</java.version>
	</properties>
	<dependencies>





		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.1.10</version>
		</dependency>

		<!--kafka 修改 版本导致 启动报错-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.kafka</groupId>-->
<!--			<artifactId>spring-kafka</artifactId>-->
<!--			<version>2.3.4.RELEASE</version>-->
<!--		</dependency>-->

		<!--excel解析-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>easyexcel</artifactId>
			<version>3.0.5</version>
		</dependency>

		<!--eureka client-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>Hoxton.SR1</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>org.springframework.cloud</groupId>-->
<!--&lt;!&ndash;		<artifactId>spring-cloud-starter-eureka-client</artifactId>&ndash;&gt;-->
<!--			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
<!--		</dependency>-->

		<!--监控-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!--mysql-connector-java-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.18</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>3.4.2</version>
		</dependency>
		<!--jdbc-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>3.7.0</version>
		</dependency>
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.33.0</version>
		</dependency>


		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>

		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!-- XXL-JOB 核心依赖 -->
		<dependency>
			<groupId>com.xuxueli</groupId>
			<artifactId>xxl-job-core</artifactId>
			<version>2.4.1</version>
		</dependency>



		<!--热部署-->
		<!--        <dependency>-->
		<!--            <groupId>org.springframework.boot</groupId>-->
		<!--            <artifactId>spring-boot-devtools</artifactId>-->
		<!--            <scope>runtime</scope>-->
		<!--            <optional>true</optional>-->
		<!--        </dependency>-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version> <!-- 请检查是否有更新的版本 -->
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.60</version>
			<scope>compile</scope>
		</dependency>
		<!--MD5 加解密-->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.69</version>
		</dependency>

		<!--sentinel 限流 熔断 代码形式-->
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-core</artifactId>
			<version>1.8.1</version>
		</dependency>
		<!--sentinel 限流 熔断 注解的方式-->
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-annotation-aspectj</artifactId>
			<version>1.8.1</version>
		</dependency>
		<!--sentinel 客户端需要引入Transport 模块来与 Sentinel 控制台进行通信。-->
		<dependency>
			<groupId>com.alibaba.csp</groupId>
			<artifactId>sentinel-transport-simple-http</artifactId>
			<version>1.8.1</version>
		</dependency>

		<!--Flowable的核心依赖-->
		<dependency>
			<groupId>org.flowable</groupId>
			<artifactId>flowable-spring-boot-starter</artifactId>
			<version>6.7.2</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
			<!--2021.1-->
			<version>2021.0.1.0</version>
		</dependency>
		<!--自定义注解的依赖 springboot 默认应该是有的-->
		<!-- Bean Validation API -->
		<!--2.2.2.RELEASE 版本号 2.6.4 升级后需要的引用-->

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		<!-- Hibernate Validator (实现) -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.1.7.Final</version>
		</dependency>

		<!-- Apache POI for reading Word documents -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.2.3</version> <!-- 确保使用最新版本 -->
		</dependency>
		<!-- JavaMail API for sending emails -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.2</version> <!-- 确保使用最新版本 -->
		</dependency>

		<!--添加SLF4J依赖(日志)
		SLF4J的多个版本都与Java 8兼容。特别是从SLF4J 1.7.x开始，就已经支持Java 8及更高版本
		对于Java 8项目，推荐使用SLF4J 1.7.x系列中的较新版本，因为这些版本已经过长时间的验证，并且与Java 8兼容良好。
		-->
<!--		<dependency>-->
<!--			<groupId>org.slf4j</groupId>-->
<!--			<artifactId>slf4j-api</artifactId>-->
<!--			<version>1.7.36</version>-->
<!--		</dependency>-->
		<!--添加SLF4J 日志实现
		ogback的多个版本都与Java 8兼容。特别是从Logback 1.2.x开始，就已经支持Java 8及更高版本。
 		Logback 1.3.x和1.4.x系列也支持Java 8，并且提供了更多的功能和改进。
 		然而，需要注意的是，这些版本可能与不同版本的SLF4J API兼容
 		（如Logback 1.3.x通常与SLF4J 1.7.x兼容，而Logback 1.4.x可能与SLF4J 2.0.x兼容）
		-->
<!--		<dependency>-->
<!--			<groupId>ch.qos.logback</groupId>-->
<!--			<artifactId>logback-classic</artifactId>-->
<!--			<version>1.3.11</version>-->
<!--		</dependency>-->


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
<!--					<image>-->
<!--						<builder>paketobuildpacks/builder-jammy-base:latest</builder>-->
<!--					</image>-->
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

</project>
